import { useEffect, useState } from "react";

export default function InsertReplacePlaceholder() {
  const [processes, setProcesses] = useState([]);
  const [lastFocus, setLastFocus] = useState(null);


  useEffect(() => {
    const updateProcesses = async () => {
      if (window.electron?.getProcesses) {
        const result = await window.electron.getProcesses();
        setProcesses(result);
      }
    };

    updateProcesses(); 
    const interval = setInterval(updateProcesses, 1000); 
    return () => clearInterval(interval);
  }, []);

  useEffect(() => {
    const interval = setInterval(async () => {
      const proc = await window.electron.getActiveProcess();

      if (proc && (proc === "WINWORD.EXE" || proc === "EXCEL.EXE")) {
        await window.electron.setLastActiveProcess(proc);
        setLastFocus(proc);
      }
    }, 1000);
    return () => clearInterval(interval);
  }, []);


  const handlePlaceholderInsert = async () => {
    const placeholders = {
      "($student_name)": "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
      "($teacher)": "–°–º–∏—Ä–Ω–æ–≤–∞ –ê.–ê.",
      "($specialization)": "–ü—Ä–∞–≤–æ–≤–µ–¥–µ–Ω–∏–µ"
    };
  
    try {
      const result = await window.electron.replacePlaceholdersInWord(placeholders);
  
      if (!result) {
        alert("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ–Ω–∏—Ç—å –º–µ—Ç–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ç–∫—Ä—ã—Ç –¥–æ–∫—É–º–µ–Ω—Ç Word.");
      }
    } catch (err) {
      alert("‚ö†Ô∏è –û—à–∏–±–∫–∞: " + err.message);
    }
  };
  
  
  

  return (
    <div>
          <h1>–û—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:</h1>
          <ul>
              {processes.map((p, i) => (
                  <li key={i}>{p.name}</li>
              ))}
          </ul>
          <p>üß† –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–æ–∫—É—Å: <b>{lastFocus}</b></p>


          <button onClick={handlePlaceholderInsert}>
              üß† –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É
          </button>




      </div>
  );
}